name: Build and Deploy
on:
  repository_dispatch:
  push:
    branches:
      - master
env:
  DOCKERHUB_REPOSITORY: dfedigital/get-into-teaching-frontend
  TF_VAR_user:              "${{ secrets.GOVUKPAAS_USERNAME  }}"
  TF_VAR_password:          "${{ secrets.GOVUKPAAS_PASSWORD  }}"
  TF_VAR_HTTPAUTH_PASSWORD: "${{ secrets.HTTPAUTH_PASSWORD }}"
  TF_VAR_HTTPAUTH_USERNAME: "${{ secrets.HTTPAUTH_USERNAME }}"
  TF_VAR_RAILS_MASTER_KEY:  "${{ secrets.RAILS_MASTER_KEY_ROLLING }}"
  TF_RAILS_ENV:             "rolling"
jobs:
  build_and_push:
    name: Build and push to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Build and push to DockerHub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PERSONAL_ACCESS_TOKEN }}
          repository: ${{ env.DOCKERHUB_REPOSITORY }}
          always_pull: true
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true
          push: true
  deploy_qa:
    name: 'Deploy to Quality Assurance'
    runs-on: ubuntu-latest

    needs:
         build_docker

    defaults:
      run:
        shell: bash

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Get Short SHA
      id: sha
      run: echo ::set-output name=short::$(git rev-parse --short $GITHUB_SHA)

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Install Terraform CloudFoundry Provider
      run: |
          wget https://github.com/cloudfoundry-community/terraform-provider-cf/releases/download/v0.12.2/terraform-provider-cloudfoundry_linux_amd64
          mkdir -p $HOME/.terraform.d/plugins/linux_amd64
          mv terraform-provider-cloudfoundry_linux_amd64 $HOME/.terraform.d/plugins/linux_amd64/terraform-provider-cloudfoundry
          cd $HOME/.terraform.d/plugins/linux_amd64
          chmod 755 terraform-provider-cloudfoundry
          pwd && ls -lafg

    - name: Terraform Init
      run: |
          cd terraform && pwd
          terraform init

    - name: Terraform Plan
      run: |
          cd terraform && pwd
          terraform plan -var-file=test.env.tfvars -out plan
      env:
          TF_VAR_api_docker_image:   ${{env.DOCKERHUB_REPOSITORY}}:sha-${{ steps.sha.outputs.short}} 

    - name: Terraform Apply
      run: |
          cd terraform && pwd
          terraform apply -auto-approve  plan
